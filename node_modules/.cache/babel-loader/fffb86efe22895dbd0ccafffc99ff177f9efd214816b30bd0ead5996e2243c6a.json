{"ast":null,"code":"// /src/pages/admin/DashboardAdmin.js\nimport React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';// Importar componentes de Recharts\nimport{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,BarChart,Bar}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DashboardAdmin(){const[daily30,setDaily30]=useState([]);// Datos últimos 30 días\nconst[dailyAll,setDailyAll]=useState([]);// Datos de todo el tiempo\nconst navigate=useNavigate();// Función para formatear la fecha en el eje X (ej: \"25/02\")\nconst formatDate=isoDateString=>{const dateObj=new Date(isoDateString);return dateObj.toLocaleDateString('es-ES',{day:'2-digit',month:'2-digit'});};// Consumir la API de los últimos 30 días\nconst fetchDaily30=async()=>{try{const token=localStorage.getItem('token');if(!token){// Si no hay token, redirigir a login o manejar el error\nconsole.error('No hay token, redirigiendo...');navigate('/login');return;}const response=await fetch('https://localhost:7113/api/Auth/daily-registrations-30',{headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Error al obtener registros de últimos 30 días');}const data=await response.json();// data es un array como [{ date: \"2025-02-20T00:00:00\", count: 1 }, ...]\n// Convertimos date a algo más usable o lo formateamos en la gráfica\nsetDaily30(data);}catch(error){console.error(error);}};// Consumir la API de todos los tiempos\nconst fetchDailyAll=async()=>{try{const token=localStorage.getItem('token');if(!token){console.error('No hay token, redirigiendo...');navigate('/login');return;}const response=await fetch('https://localhost:7113/api/Auth/daily-registrations-all',{headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Error al obtener registros de todo el historial');}const data=await response.json();// data es un array como [{ date: \"2025-01-22T00:00:00\", count: 1 }, ...]\nsetDailyAll(data);}catch(error){console.error(error);}};// Llamamos las APIs al montar el componente\nuseEffect(()=>{fetchDaily30();fetchDailyAll();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1rem'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Dashboard Administrador\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Bienvenido al panel de administraci\\xF3n.\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'2rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Registros de los \\xDAltimos 30 D\\xEDas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:daily30,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",tickFormatter:formatDate}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:label=>`Fecha: ${formatDate(label)}`,formatter:value=>[`${value} registros`,'Count']}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"count\",stroke:\"#8884d8\",strokeWidth:2})]})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'2rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Registros de Todos los Tiempos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:dailyAll,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",tickFormatter:formatDate}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:label=>`Fecha: ${formatDate(label)}`,formatter:value=>[`${value} registros`,'Count']}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"count\",fill:\"#82ca9d\"})]})})]})]});}export default DashboardAdmin;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","jsx","_jsx","jsxs","_jsxs","DashboardAdmin","daily30","setDaily30","dailyAll","setDailyAll","navigate","formatDate","isoDateString","dateObj","Date","toLocaleDateString","day","month","fetchDaily30","token","localStorage","getItem","console","error","response","fetch","headers","ok","Error","data","json","fetchDailyAll","style","padding","children","marginTop","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","labelFormatter","label","formatter","value","type","stroke","strokeWidth","fill"],"sources":["/Users/fernandovargas/Documents/GitHub/gymfront/src/pages/admin/DashboardAdmin.js"],"sourcesContent":["// /src/pages/admin/DashboardAdmin.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Importar componentes de Recharts\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n} from 'recharts';\n\nfunction DashboardAdmin() {\n  const [daily30, setDaily30] = useState([]); // Datos últimos 30 días\n  const [dailyAll, setDailyAll] = useState([]); // Datos de todo el tiempo\n  const navigate = useNavigate();\n\n  // Función para formatear la fecha en el eje X (ej: \"25/02\")\n  const formatDate = (isoDateString) => {\n    const dateObj = new Date(isoDateString);\n    return dateObj.toLocaleDateString('es-ES', {\n      day: '2-digit',\n      month: '2-digit',\n    });\n  };\n\n  // Consumir la API de los últimos 30 días\n  const fetchDaily30 = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        // Si no hay token, redirigir a login o manejar el error\n        console.error('No hay token, redirigiendo...');\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch('https://localhost:7113/api/Auth/daily-registrations-30', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Error al obtener registros de últimos 30 días');\n      }\n\n      const data = await response.json();\n      // data es un array como [{ date: \"2025-02-20T00:00:00\", count: 1 }, ...]\n      // Convertimos date a algo más usable o lo formateamos en la gráfica\n      setDaily30(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Consumir la API de todos los tiempos\n  const fetchDailyAll = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No hay token, redirigiendo...');\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch('https://localhost:7113/api/Auth/daily-registrations-all', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Error al obtener registros de todo el historial');\n      }\n\n      const data = await response.json();\n      // data es un array como [{ date: \"2025-01-22T00:00:00\", count: 1 }, ...]\n      setDailyAll(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Llamamos las APIs al montar el componente\n  useEffect(() => {\n    fetchDaily30();\n    fetchDailyAll();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h2>Dashboard Administrador</h2>\n      <p>Bienvenido al panel de administración.</p>\n\n      <div style={{ marginTop: '2rem' }}>\n        <h3>Registros de los Últimos 30 Días</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart\n            data={daily30}\n            margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            {/* Eje X con formateo de fecha */}\n            <XAxis dataKey=\"date\" tickFormatter={formatDate} />\n            <YAxis />\n            <Tooltip\n              labelFormatter={(label) => `Fecha: ${formatDate(label)}`}\n              formatter={(value) => [`${value} registros`, 'Count']}\n            />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"count\" stroke=\"#8884d8\" strokeWidth={2} />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      <div style={{ marginTop: '2rem' }}>\n        <h3>Registros de Todos los Tiempos</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={dailyAll}\n            margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" tickFormatter={formatDate} />\n            <YAxis />\n            <Tooltip\n              labelFormatter={(label) => `Fecha: ${formatDate(label)}`}\n              formatter={(value) => [`${value} registros`, 'Count']}\n            />\n            <Legend />\n            <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default DashboardAdmin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}